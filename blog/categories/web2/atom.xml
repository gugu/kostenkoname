<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web2 | Андрей Костенко]]></title>
  <link href="http://gugu.github.com/kostenkoname/blog/categories/web2/atom.xml" rel="self"/>
  <link href="http://gugu.github.com/kostenkoname/"/>
  <updated>2013-12-06T00:24:25+04:00</updated>
  <id>http://gugu.github.com/kostenkoname/</id>
  <author>
    <name><![CDATA[Andrii Kostenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DNS для самых маленьких]]></title>
    <link href="http://gugu.github.com/kostenkoname/blog/2010/12/21/dns-first-steps/"/>
    <updated>2010-12-21T01:27:15+03:00</updated>
    <id>http://gugu.github.com/kostenkoname/blog/2010/12/21/dns-first-steps</id>
    <content type="html"><![CDATA[<p>В силу некоторых обстоятельств мне приходится часто работать с DNS.</p>

<p>Документации (кроме манов по bind и rfc) я практически не нашёл, разбирался ручками. Поэтому я сначала расскажу, как всё работает. Кому-то это будет интересно, а кто-то меня поправит.</p>

<p>Так, у нас есть доменное имя. При его регистрации у нас попросят указать два адреса DNS-сервера, которые будут отдавать всю информацию о домене. Если вы регистрируете домен example.com, то у вас есть два варианта - дать адрес nameserverов в другом домене, который уже работает (например, ns1.kostenko.name и ns2.kostenko.name) и настроить их. Во втором варианте - при вводе ns1.example.com и ns2.example.com вам нужно будет указать их IP.</p>

<p>Теперь основное:</p>

<p>Для вашего домена вам потребуется указать записи SOA и A (или AAAA для IPv6). SOA - start of authority содержит базовую информацию о доменном имени. A - IPv4 адрес</p>

<pre><code>example.com.    SOA ns1.example.com. ns2.example.com. your_email.google.com.
example.com.    A   89.115.99.125
ns1             A   89.115.99.125
ns2             A   89.115.99.125
</code></pre>

<p>Домен должен заработать. Обратите внимание на точки в конце. Они означают в bind, что это корневой домен. Домен без точки в конце - поддомен нашего example.com. @ - это alias для example.com.</p>

<p>Теперь о том, что вы можете сделать.</p>

<h2>Почта</h2>

<p>Если вы хотите получать почту на этот домен, а почтовый сервер находится на другом сервере, то мы прописываем такие
строчки:</p>

<pre><code>example.com.    MX  aspmx.google.com.   10 ;(for example)
example.com.    MX  aspmx2.google.com.  20 ; 20 - это приоритет, по порядку приоритета SMTP-сервера будут пытаться
отправлять сообщения.
</code></pre>

<h2>Поддомены</h2>

<p>Опять ситуация. У вас есть домен greate.st, на котором вы рассказываете о том, какой вы охуенный. Вы хотите создать
домен wikileaks.greate.st, на котором захостить зеркало пока ещё живого Wikileaks. Если это у вас тот же IP, то
нужно создать запись</p>

<pre><code>wikileaks    CNAME   greate.st.   ;wikileaks - это alias на greate.st
</code></pre>

<p>Если другой IP, то пишем</p>

<pre><code>wikileaks    A       4.82.18.192
</code></pre>

<p>Если хотите отправить все поддомены куда-то, то для этого вместо имени поддомена пишем *</p>

<pre><code>*            CNAME      buynow.only.for.4.99.dollars.greate.st.
*            A          127.0.0.1; так тоже можно))
</code></pre>

<h2>Всякая хуита</h2>

<p>Много для чего полезно использовать DNS (SPF, подписывание писем, XMPP...). Можно даже войну и мир там в транслите
хранить. Авторам RFC было впадлу переписывать RFC под
каждого, поэтому есть ещё TXT записи, которые используются под всякую фигню.</p>

<p>90% DNS серверов используют ISC Bind. Он старый, а значит - надёжный и стабильный. Но насколько же он уёбищен...
Документации нормальной нет. Та, что есть - неправильна. Статическая линковка, которая выебала мне весь мозг при
подключении DLZ. Поэтому я хочу рассказать о DNS-сервере, с которым работать куда приятней.</p>

<h2>PowerDNS</h2>

<pre><code>apt-get install pdns-server pdns-backend-bind pdns-backend-pgsql
</code></pre>

<p>Чем он отличается от bind? Он младше моего дедушки. И это главное.</p>

<p>Из второстепенных - у него есть веб-интерфейс статистики, динамическая линковка, которая позволяет вам в binary-based
дистрибутивах поставить поддержку postgreSQL/MySQL без перекомпиляции, более приятный интерфейс.</p>

<p>Свой велосипед в powerdns изобретать не стали, поэтому вы можете переехать с bind на powerdns без правки конфигов. Если
у вас всё уже лежит в bind. Если хотите положить настройки в базу и дать доступ к ним из админки - пожалуйста.</p>

<pre><code>zone2sql /etc/bind/named.conf | mysql
</code></pre>

<p>Скрипт для создания базы записей выглядит так:</p>

<pre><code>create table domains (
 id      SERIAL PRIMARY KEY,
 name        VARCHAR(255) NOT NULL,
 master      VARCHAR(128) DEFAULT NULL,
 last_check  INT DEFAULT NULL,
 type        VARCHAR(6) NOT NULL,
 notified_serial INT DEFAULT NULL, 
 account         VARCHAR(40) DEFAULT NULL
);
CREATE UNIQUE INDEX name_index ON domains(name);

CREATE TABLE records (
        id              SERIAL PRIMARY KEY,
        domain_id       INT DEFAULT NULL,
        name            VARCHAR(255) DEFAULT NULL,
        type            VARCHAR(6) DEFAULT NULL,
        content         VARCHAR(255) DEFAULT NULL,
        ttl             INT DEFAULT NULL,
        prio            INT DEFAULT NULL,
        change_date     INT DEFAULT NULL, 
        CONSTRAINT domain_exists 
        FOREIGN KEY(domain_id) REFERENCES domains(id)
        ON DELETE CASCADE
);

CREATE INDEX rec_name_index ON records(name);
CREATE INDEX nametype_index ON records(name,type);
CREATE INDEX domain_id ON records(domain_id);

create table supermasters (
      ip VARCHAR(25) NOT NULL, 
      nameserver VARCHAR(255) NOT NULL, 
      account VARCHAR(40) DEFAULT NULL
);

GRANT SELECT ON supermasters TO pdns;
GRANT ALL ON domains TO pdns;
GRANT ALL ON domains_id_seq TO pdns;
GRANT ALL ON records TO pdns;
GRANT ALL ON records_id_seq TO pdns;
</code></pre>

<h2>Клиентский софт</h2>

<p>Ну настроили мы всё. А как проверить? Про стандартную nslookup знают все. Показывается "резолвится/не резолвится".</p>

<p>Для более детальной информации есть команда dig из bind-utils. Попробуйте, например "dig mx rambler.ru"</p>

<p>Ну а для поиска косяков есть <a href="http://intodns.com/">IntoDNS</a>.
Вот так выглядит обзор моего <a href="http://www.intodns.com/greate.st">greate.st</a>, а так -  <a href="http://www.intodns.com/rambler.ru">нормальный сайт</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ускоряем свой HTTP-сервер]]></title>
    <link href="http://gugu.github.com/kostenkoname/blog/2009/11/05/accept-filters/"/>
    <updated>2009-11-05T22:17:38+03:00</updated>
    <id>http://gugu.github.com/kostenkoname/blog/2009/11/05/accept-filters</id>
    <content type="html"><![CDATA[<p>Для начала расскажу, как обычно работают сервера:</p>

<ol>
<li><p>Создаётся сокет, который слушает порт</p></li>
<li><p>Вызывается системный вызов accept, который берёт первого клиента из очереди соединений, а если его нет - то блокирует приложение до тех пор, пока он не появится</p></li>
<li><p>Приложение что-то делает с этим клиентом и в конце концов с ним прощается</p></li>
<li><p>goto пункт два</p></li>
</ol>


<p>nginx и lighttpd использует вместо accept функции select/kevent/epoll, которые позволяют работать со многими клиентами одновременно, но это уже отдельная история (к асинхронным веб-серверам accept-фильтры применимяются точно так же)</p>

<p>Accept-фильтры - это модули ядра FreeBSD, которые не говорят, что сокет готов до тех пор, пока не выполнится какое-то условие. Я нашёл только два фильтра:</p>

<ul>
<li><p><strong>dataready</strong> - accept блокирует сокет до тех пор, пока в него прийдут данные. Когда мы получаем сокет, мы уже точно можем из него что-то считать</p></li>
<li><p><strong>httpready</strong> - сокет блокируется до тех пор, пока не прийдёт полный GET/HEAD запрос. Соответственно, нам не надо тратить время на переключение контекста, если запрос ещё не собрался.</p></li>
</ul>


<h3>Остановимся на фильтре httpready</h3>

<p>Буферизирует он только GET и HEAD запросы, так как в POST/PUT может прийти 600мегабайтный <a href="http://mirrors.kernel.org/gentoo/releases/amd64/autobuilds/current-iso/install-amd64-minimal-20091029.iso">порнофильм</a>.
Итак, подключаем модуль accf_http:</p>

<pre><code>    kldload accf_http
    echo 'accf_http_load=”YES”' &gt;&gt; /boot/loader.conf
</code></pre>

<p>Далее нужно изменить работу с сокетом -- установить опцию httpready:</p>

<pre><code>        struct accept_filter_arg afa;
        bzero(&amp;afa;, sizeof(afa));
        strcpy(afa.af_name, "httpready");
        setsockopt(sok, SOL_SOCKET, SO_ACCEPTFILTER, &amp;afa;, sizeof(afa)); 
</code></pre>

<h3>Результаты тестов</h3>

<p>Так как существует мнение, что accept-фильтры бесполезны, мы решили провести тестирование. Веб-сервер был выбран AnyEvent::HTTPD, клиент - ab. Итак, результаты:</p>

<ol>
<li><p>локальная машина, 10000 запросов, concurrency = 4: httpready даёт прирост в 10%</p></li>
<li><p>локальная сеть, 10000 запросов, concurrency=1000: httpready даёт прирост в 10%</p></li>
<li><p>локальная сеть, 10000 запросов, concurrency = 4: прирост в 25%</p></li>
<li><p>локальная сеть, 1000 запросов, concurrency = 1: в два раза!</p></li>
</ol>


<p>В боевых условиях, при наличии GPRS, 256k и прочего позора цивилизации, скорость ещё увеличится.</p>

<h3>Настройка веб-серверов</h3>

<p>В apache 1.3+ и nginx accept-фильтры поддерживаются.</p>

<p>Apache под FreeBSD изначально содержит такую конфигурацию:</p>

<pre><code> AcceptFilter http httpready
 AcceptFilter https dataready 
</code></pre>

<p>и менять её не стоит.
А вот в настройках сервера nginx стоит добавить опцию</p>

<pre><code>    accept_filter "httpready";
</code></pre>

<h3>Ссылки</h3>

<ul>
<li><p><a href="http://sysoev.ru/freebsd/accept-filters.html">статья Игоря Сысоева</a></p></li>
<li><p>man accf_http</p></li>
<li><p>man accf_data</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Вышел wordpress 2.8]]></title>
    <link href="http://gugu.github.com/kostenkoname/blog/2009/06/13/d0b2d18bd188d0b5d0bb-wordpress-2-8/"/>
    <updated>2009-06-13T09:30:07+04:00</updated>
    <id>http://gugu.github.com/kostenkoname/blog/2009/06/13/d0b2d18bd188d0b5d0bb-wordpress-2-8</id>
    <content type="html"><![CDATA[<p>Из новшеств замечено только одно - админка перестала работать под IE6. В остальном всё так же. Настоятельно советую обновиться лишь тем, кому совсем нехер делать</p>

<p>PD: обновился)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Новый релиз калькулятора]]></title>
    <link href="http://gugu.github.com/kostenkoname/blog/2009/03/13/new-calculator-release/"/>
    <updated>2009-03-13T11:53:35+03:00</updated>
    <id>http://gugu.github.com/kostenkoname/blog/2009/03/13/new-calculator-release</id>
    <content type="html"><![CDATA[<p>Из изменений:</p>

<ul>
<li><p>Собственный парсер результата. Сейчас правильно показывается степень, подсвечиваются неизвестные.</p></li>
<li><p>Правильно понимаются валюты. У них отображается название, научился понимать знак $</p></li>
<li><p>При наборе подсказка не только парсит и расставляет функции, а ещё и показывает помощь по аргументам</p></li>
<li><p>Поправил мелкие баги, связанные с показом несуществующих ошибок</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress 2.7 beta1]]></title>
    <link href="http://gugu.github.com/kostenkoname/blog/2008/11/04/wordpress-27-beta1/"/>
    <updated>2008-11-04T06:57:34+03:00</updated>
    <id>http://gugu.github.com/kostenkoname/blog/2008/11/04/wordpress-27-beta1</id>
    <content type="html"><![CDATA[<p>это первый пост, который я пишу из WP-2.7beta1.</p>

<p>Изменился весь дизайн админки. Она стала лучше с точки зрения юзабилити (всё перед глазами, а добавить пост можно вообще в один клик), но дизайн стал каким-то серым и угрюмым. Есть много замечательных людей, которые и без дизайна мне настроение портят. Не хватало ещё, чтобы WordPress этим занимался.</p>

<p><a href="http://kostenko.name/wp-content/uploads/2008/11/admin.png"><img src="http://kostenko.name/wp-content/uploads/2008/11/admin-300x187.png" alt="Админка вордпресса" /></a></p>

<p>Так же ворпресс научился самообновлять ядро. Система такая же, как и с плагинами.</p>

<p>Пока это всё что я заметил.</p>

<p>Для тех, кто не знает, что такое Wordpress, объяснение <a href="http://absurdopedia.wikia.com/wiki/%D0%9C%D0%B0%D1%82%D1%87%D0%B0%D1%81%D1%82%D1%8C_(%D0%BA%D1%83%D0%BB%D1%8C%D1%82">здесь</a>)</p>
]]></content>
  </entry>
  
</feed>
